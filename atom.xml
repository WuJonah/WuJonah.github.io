<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jonah博客</title>
  <subtitle>gogogo! go!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wujonah.github.io/"/>
  <updated>2017-11-09T03:59:49.965Z</updated>
  <id>https://wujonah.github.io/</id>
  
  <author>
    <name>Jonah</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://wujonah.github.io/2017/11/09/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%8C%E5%B1%95%E7%A4%BA%E5%92%8C%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
    <id>https://wujonah.github.io/2017/11/09/文件上传，展示和错误处理/</id>
    <published>2017-11-09T05:08:20.224Z</published>
    <updated>2017-11-09T03:59:49.965Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/DNwesyy.png" alt=""></p>
<p>#文件上传,展示和错误处理功能</p>
<p>##步骤：</p>
<p>###1.使用Thymeleaf作为模板引擎，添加页面 profile.html<br><img src="https://i.imgur.com/nlTmjRH.png" alt=""></p>
<pre><code>&lt;h2 class=&quot;indigo-text center&quot; th:text=&quot;#{profile.title}&quot;&gt;Personal info&lt;/h2&gt;

&lt;div class=&quot;row&quot;&gt;

    &lt;div class=&quot;col m8 s12 offset-m2&quot;&gt;
        &lt;img th:src=&quot;@{/uploadedPicture}&quot; width=&quot;100&quot; height=&quot;100&quot;/&gt;
    &lt;/div&gt;

    &lt;div class=&quot;col s12 center red-text&quot; th:text=&quot;${error}&quot; th:if=&quot;${error}&quot;&gt;
        Error during upload
    &lt;/div&gt;

    &lt;form th:action=&quot;@{/profile}&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; class=&quot;col m8 s12 offset-m2&quot;&gt;

        &lt;div class=&quot;input-field col s6&quot;&gt;
            &lt;input type=&quot;file&quot; id=&quot;file&quot; name=&quot;file&quot;/&gt;
        &lt;/div&gt;

        &lt;div class=&quot;col s6 center&quot;&gt;
            &lt;button class=&quot;btn indigo waves-effect waves-light&quot; type=&quot;submit&quot; name=&quot;upload&quot; th:text=&quot;#{upload}&quot;&gt;  &lt;!-- 触发上传 --&gt;
                Upload
                &lt;i class=&quot;mdi-content-send right&quot;&gt;&lt;/i&gt;
            &lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;
&lt;/div&gt; 
</code></pre><p>###2.后台代码 pictureuploadController<br> <img src="https://i.imgur.com/6NAk6Q2.png" alt=""></p>
<pre><code>@Autowired   //构造方法
public PictureUploadController(PicturesUploadProperties uploadProperties, MessageSource messageSource,UserProfileSession userProfileSession ){
    uploadPath = uploadProperties.getUploadPath();
    pictures = uploadProperties.getPictures();
    this.messageSource = messageSource;
    this.userProfileSession = userProfileSession;
}


@RequestMapping(value = &quot;/uploadedPicture&quot;)   //配置页面响应图片
public void getUploadedPicture(HttpServletResponse response) throws  IOException{
  //  ClassPathResource classPathResource = new ClassPathResource(&quot;/images/google.gif&quot;);
    Resource res = userProfileSession.getPicturePath();
    if(res == null){
        res = pictures;
    }
    response.setHeader(&quot;Content-Type&quot;, URLConnection.guessContentTypeFromName(res.getFilename()));
    IOUtils.copy(res.getInputStream(),response.getOutputStream());
}

@RequestMapping(value = &quot;/profile&quot;,params = &quot;upload&quot;,method = RequestMethod.POST)   //上传功能
    public String onUpload(@RequestParam MultipartFile file, RedirectAttributes redirectAttributes ) throws IOException {  //RedirectAttributes专门用于重定向之后还能带参数跳转的的工具类
    if(file.isEmpty()|| !isImage(file)){
        redirectAttributes.addFlashAttribute(&quot;error&quot;,&quot;Incorrect file. Please upload a picture.&quot;); //带参数重定向
        return  &quot;redirect:/profile&quot;;
    }
    Resource res = copyFileToPic(file);
    userProfileSession.setPicturePath(res);
    return &quot;redirect:profile &quot;;
}

@RequestMapping(&quot;uploadError&quot;)
public ModelAndView onUploadError(Locale locale){
    ModelAndView md = new ModelAndView(&quot;profile/uploadPage&quot;);
    md.addObject(&quot;error&quot;,messageSource.getMessage(&quot;upload.file.too.big&quot;,null,locale));
    md.addObject(&quot;profileForm&quot;,userProfileSession.toForm());
    return md;
}


private Resource copyFileToPic(MultipartFile file) throws IOException{
    String fileExtension = getFileExtension(file.getOriginalFilename());
    File tempFile = File.createTempFile(&quot;pic&quot;,fileExtension,uploadPath.getFile());
    try(InputStream in = file.getInputStream() ;
        OutputStream out = new FileOutputStream(tempFile)){
        IOUtils.copy(in,out);
    }
    return new FileSystemResource(tempFile);
}

private boolean isImage(MultipartFile file){
    return file.getContentType().startsWith(&quot;image&quot;);  //getContentType()方法会返回文件的多用途Internet邮件扩展类型。它将会是image/png,image/jpg等，所以判断是否是image开头即可。
}

private static String getFileExtension(String name){  //返回name的文件格式名如gif,jpg等
    return   name.substring(name.lastIndexOf(&quot;.&quot;));
}

@ExceptionHandler(IOException.class)
public ModelAndView handleIOException(Locale locale){
    ModelAndView modelAndView = new ModelAndView(&quot;profile/uploadPage&quot;);
    modelAndView.addObject(&quot;error&quot;,messageSource.getMessage(&quot;upload.io.exception&quot;,null,locale));
    modelAndView.addObject(&quot;profileForm&quot;,userProfileSession.toForm());
    return modelAndView;
}
</code></pre><p>###3.管理上传属性 <br></p>
<p>####3.1 定义picturesuploadproperties类<br><br>通过application.properties文件来配置上传目录以及默认用户图片的路径<br><br> @ConfigurationProperties会告诉springboot以一种类型安全的方式，自动映射类路径下所发现的属性（默认情况下，位于application.properties文件中）<br> <img src="https://i.imgur.com/daTOos1.png" alt=""></p>
<p>####3.2 添加定义picturesuploadproperties类到配置中<br> <img src="https://i.imgur.com/oTsAkCW.png" alt=""></p>
<p>####3.3 在配置文件中添加属性值<br> ConfigurationProperties属性，uploadPath是在应用的根目录下，pictures位于类路径下<br>upload.pictures.uploadPath=file:./pictures<br>upload.pictures.pictures=classpath:/images/002.jpg </p>
<p><img src="https://i.imgur.com/mpCAyo4.png" alt=""></p>
<p>另外的还有一些转换错误信息之类的，下次再说。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DNwesyy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;#文件上传,展示和错误处理功能&lt;/p&gt;
&lt;p&gt;##步骤：&lt;/p&gt;
&lt;p&gt;###1.使用Thymeleaf作为模板引擎，添加页面 profile.html&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>新文章</title>
    <link href="https://wujonah.github.io/2017/07/17/My-New-Post/"/>
    <id>https://wujonah.github.io/2017/07/17/My-New-Post/</id>
    <published>2017-07-17T11:21:18.000Z</published>
    <updated>2017-08-31T07:43:12.517Z</updated>
    
    <content type="html"><![CDATA[<p>hello world.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hello world.&lt;/p&gt;

    
    </summary>
    
      <category term="blog" scheme="https://wujonah.github.io/categories/blog/"/>
    
    
      <category term="blog" scheme="https://wujonah.github.io/tags/blog/"/>
    
      <category term="work" scheme="https://wujonah.github.io/tags/work/"/>
    
      <category term="life" scheme="https://wujonah.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wujonah.github.io/2017/07/13/hello-world/"/>
    <id>https://wujonah.github.io/2017/07/13/hello-world/</id>
    <published>2017-07-13T06:49:54.633Z</published>
    <updated>2017-07-13T06:49:54.634Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
